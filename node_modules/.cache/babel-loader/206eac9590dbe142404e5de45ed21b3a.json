{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport getCurrentDayDetailedForecast from '../utils/getCurrentDayDetailedForecast';\nimport getCurrentDayForecast from '../utils/getCurrentDayForecast';\nimport getUpcomingDaysForecast from '../utils/getUpcomingDaysForecast';\nconst BASE_URL = \"https://www.metaweather.com/api/location\";\nconst CROSS_DOMAIN = \"https://the-ultimate-api-challenge.herokuapp.com\";\nconst REQUEST_URL = `${CROSS_DOMAIN}/${BASE_URL}`;\n\nconst useForecast = () => {\n  _s();\n\n  const [isError, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  const getWoeid = async location => {\n    const {\n      data\n    } = await axios(`${REQUEST_URL}/search`, {\n      params: {\n        query: location\n      }\n    });\n\n    if (!data || data.length === 0) {\n      setError(\"Такой локации не найдено\");\n      setLoading(false);\n      return;\n    }\n\n    return data[0];\n  };\n\n  const getForecastData = async woeid => {\n    const {\n      data\n    } = await axios(`${REQUEST_URL}/${woeid}`);\n\n    if (!data || data.length === 0) {\n      setError(\"Что-то пошло не так\");\n      setLoading(false);\n      return;\n    }\n\n    return data;\n  };\n\n  const gatherForecastData = data => {\n    const currentDay = getCurrentDayForecast(data.consolidated_weather[0], data.title, data.parent);\n    console.log(currentDay);\n    const currentDayDetails = getCurrentDayDetailedForecast(data.consolidated_weather[0]);\n    const upcomingDays = getUpcomingDaysForecast(data.consolidated_weather);\n    setForecast({\n      currentDay,\n      currentDayDetails,\n      upcomingDays\n    });\n    setLoading(false);\n  };\n\n  const sumbitRequest = async location => {\n    setLoading(true);\n    setError(false);\n    const response = await getWoeid(location);\n    if (!(response === null || response === void 0 ? void 0 : response.woeid)) return;\n    const data = await getForecastData(response.woeid);\n    if (!data) return;\n    gatherForecastData(data);\n    console.log(response);\n    console.log(data);\n  };\n\n  return {\n    isError,\n    isLoading,\n    forecast,\n    sumbitRequest\n  };\n};\n\n_s(useForecast, \"98jJfAbkRG8B5Phem9UEdOko1FU=\");\n\nexport default useForecast;","map":{"version":3,"sources":["/home/ITRANSITION.CORP/a.lupach/forecast-app/src/hooks/useForecast.js"],"names":["useState","axios","getCurrentDayDetailedForecast","getCurrentDayForecast","getUpcomingDaysForecast","BASE_URL","CROSS_DOMAIN","REQUEST_URL","useForecast","isError","setError","isLoading","setLoading","forecast","setForecast","getWoeid","location","data","params","query","length","getForecastData","woeid","gatherForecastData","currentDay","consolidated_weather","title","parent","console","log","currentDayDetails","upcomingDays","sumbitRequest","response"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nimport getCurrentDayDetailedForecast from '../utils/getCurrentDayDetailedForecast'\nimport getCurrentDayForecast from '../utils/getCurrentDayForecast'\nimport getUpcomingDaysForecast from '../utils/getUpcomingDaysForecast'\n\nconst BASE_URL = \"https://www.metaweather.com/api/location\";\nconst CROSS_DOMAIN = \"https://the-ultimate-api-challenge.herokuapp.com\";\nconst REQUEST_URL = `${CROSS_DOMAIN}/${BASE_URL}`;\n\nconst useForecast = () => {\n  const [isError, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  const getWoeid = async (location) => {\n    const { data } = await axios(`${REQUEST_URL}/search`, {params: { query: location }});\n\n    if (!data || data.length === 0) {\n      setError(\"Такой локации не найдено\");\n      setLoading(false)\n      return;\n    }\n\n    return data[0]\n  };\n\n\n  const getForecastData = async (woeid) => {\n    const {data} = await axios(`${REQUEST_URL}/${woeid}`);\n    if (!data || data.length === 0) {\n        setError(\"Что-то пошло не так\");\n        setLoading(false)\n        return\n    }\n\n    return data\n  }\n\n  const gatherForecastData= (data) => {\n    const currentDay = getCurrentDayForecast(data.consolidated_weather[0], data.title, data.parent)\n    console.log(currentDay)\n    const currentDayDetails = getCurrentDayDetailedForecast(data.consolidated_weather[0]) \n    const upcomingDays = getUpcomingDaysForecast(data.consolidated_weather)\n\n    setForecast({currentDay, currentDayDetails, upcomingDays})\n    setLoading(false);\n  }\n\n  const sumbitRequest = async (location) => {\n    setLoading(true);\n    setError(false);\n\n    const response = await getWoeid(location);\n    if (!response?.woeid) return; \n\n    const data = await getForecastData(response.woeid)\n    if (!data) return;\n\n    gatherForecastData(data)\n    console.log(response)\n    console.log(data)\n  };\n\n  return {\n    isError,\n    isLoading,\n    forecast,\n    sumbitRequest,\n  };\n};\n\nexport default useForecast;\n"]},"metadata":{},"sourceType":"module"}